-*- org -*-

* Two, or three, types of services:

- global
- for Object Type
- for Object

* Possibility to overload services for Object Types and Objects

** Possibility to tell exactly which Object Types it exist for
** Configuration for each (Service,Object Type)

-The type of configuration should be common for all Object Types for a single
  service.

- It should be possible to have different "values" of the configuration for
  each Object Type

  Eg. For the "Delete" service, it is possible to tell which dependent objects
  should be deleted before the target object is deleted.
  This could be specified by a list of (Object Type, which Attribute in the
  referencing Object Type that references the "deleted" Object Type)

- The only difference between overloadings of a single service is the Object
  Type and it's accompaning configuration.

  This means that there is a common "main" function that implements the
  service, given an Object Type and it's accompaning configuration.

  serviceImpl :: (Object Type,Config) -> ServiceEnv -> ServiceOutput
